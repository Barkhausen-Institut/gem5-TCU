# Copyright (c) 2015 Christian Menard
# Copyright (C) 2015-2018 Nils Asmussen <nils@os.inf.tu-dresden.de>
# Copyright (C) 2019-2021 Nils Asmussen, Barkhausen Institut
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# The views and conclusions contained in the software and documentation are those
# of the authors and should not be interpreted as representing official policies,
# either expressed or implied, of the FreeBSD Project.

Import('*')

SimObject('Tcu.py', sim_objects=['BaseTcu', 'Tcu'])
SimObject('connector/Connector.py', sim_objects=['BaseConnector', 'CoreConnector'])

Source('connector/base.cc')
Source('connector/core.cc')
if env['USE_X86_ISA']:
    Source('connector/x86.cc')
    SimObject('connector/X86Connector.py', sim_objects=['X86Connector'])
elif env['USE_ARM_ISA']:
    Source('connector/arm.cc')
    SimObject('connector/ArmConnector.py', sim_objects=['ArmConnector'])
elif env['USE_RISCV_ISA']:
    Source('connector/riscv.cc')
    SimObject('connector/RiscvConnector.py', sim_objects=['RiscvConnector'])

Source('base.cc')
Source('cmds.cc')
Source('connector.cc')
Source('cu_reqs.cc')
Source('ep_file.cc')
Source('mem_unit.cc')
Source('msg_unit.cc')
Source('reg_file.cc')
Source('tcu.cc')
Source('tlb.cc')
Source('tcuif.cc')
Source('xfer_unit.cc')

DebugFlag('Tcu')
DebugFlag('TcuBuf')
DebugFlag('TcuCmd')
DebugFlag('TcuConnector')
DebugFlag('TcuCoreMemAcc')
DebugFlag('TcuCUReqs')
DebugFlag('TcuCredits')
DebugFlag('TcuEps')
DebugFlag('TcuLLCMemAcc')
DebugFlag('TcuRequestPort')
DebugFlag('TcuMsgs')
DebugFlag('TcuPackets')
DebugFlag('TcuRegRange')
DebugFlag('TcuRegRead')
DebugFlag('TcuRegWrite')
DebugFlag('TcuResponsePort')
DebugFlag('TcuTlbRead')
DebugFlag('TcuTlbWrite')
DebugFlag('TcuXfers')

CompoundFlag('TcuReg', [ 'TcuRegRead', 'TcuRegWrite' ])
CompoundFlag('TcuTlb', [ 'TcuTlbRead', 'TcuTlbWrite' ])
